/*
 * This file is generated by jOOQ.
*/
package de.quinscape.domainql.testdomain.tables;


import de.quinscape.domainql.testdomain.Indexes;
import de.quinscape.domainql.testdomain.Keys;
import de.quinscape.domainql.testdomain.Public;
import de.quinscape.domainql.testdomain.tables.records.TargetFiveRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TargetFive extends TableImpl<TargetFiveRecord> {

    private static final long serialVersionUID = 1857493919;

    /**
     * The reference instance of <code>public.target_five</code>
     */
    public static final TargetFive TARGET_FIVE = new TargetFive();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TargetFiveRecord> getRecordType() {
        return TargetFiveRecord.class;
    }

    /**
     * The column <code>public.target_five.id</code>.
     */
    public final TableField<TargetFiveRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * Create a <code>public.target_five</code> table reference
     */
    public TargetFive() {
        this(DSL.name("target_five"), null);
    }

    /**
     * Create an aliased <code>public.target_five</code> table reference
     */
    public TargetFive(String alias) {
        this(DSL.name(alias), TARGET_FIVE);
    }

    /**
     * Create an aliased <code>public.target_five</code> table reference
     */
    public TargetFive(Name alias) {
        this(alias, TARGET_FIVE);
    }

    private TargetFive(Name alias, Table<TargetFiveRecord> aliased) {
        this(alias, aliased, null);
    }

    private TargetFive(Name alias, Table<TargetFiveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_TARGET_FIVE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TargetFiveRecord> getPrimaryKey() {
        return Keys.PK_TARGET_FIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TargetFiveRecord>> getKeys() {
        return Arrays.<UniqueKey<TargetFiveRecord>>asList(Keys.PK_TARGET_FIVE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetFive as(String alias) {
        return new TargetFive(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TargetFive as(Name alias) {
        return new TargetFive(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TargetFive rename(String name) {
        return new TargetFive(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TargetFive rename(Name name) {
        return new TargetFive(name, null);
    }
}
